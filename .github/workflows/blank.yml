# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'VERSION'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  checktag:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.content }}
      tagexists: ${{ steps.checkTag.outputs.exists }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master
          
      - name: Read VERSION
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: VERSION
          trim: True
      - name: Echo VERSION file
        run: echo "VERSION='${{ steps.version.outputs.content }}'"

      
      - name: Check tag
        uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with: 
          tag: '${{ steps.version.outputs.content }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Display Outputs
        run: |
          echo "Version=${{ steps.version.outputs.content }}"
          echo "Exists Already=${{ steps.checkTag.outputs.exists }}"
  createtag:
  
    runs-on: ubuntu-latest
    needs: checktag        
    
    steps:
      - name: Display Inputs
        run: |
          echo "Version=${{ needs.checktag.outputs.version }}"
          echo "Exists Already=${{ needs.checktag.outputs.tagexists }}"
    
      - name: Create Tag
        if: contains(needs.checktag.outputs.tagexists, 'false')  
        uses: negz/create-tag@v1
        with:
           version: '${{ needs.checktag.outputs.version }}'
           token: ${{ secrets.GITHUB_TOKEN }}
           
  createrelease:
  
    runs-on: ubuntu-latest
    needs: [checktag,createtag]
    
    steps:
      - name: Display Inputs
        run: |
          echo "Version=${{ needs.checktag.outputs.version }}"
          echo "Exists Already=${{ needs.checktag.outputs.tagexists }}"
           
#      - name: Delete release (if it is there)
#        uses: cb80/delrel@latest
#        with:
#          tag: ${{ needs.checktag.outputs.version }}

      - uses: actions/checkout@master
     
      - name: Set env
        run: echo "ZIPNAME='${{ github.event.repository.name }}.$( date '+%F' ).v${{ needs.checktag.outputs.version }}.zip'" >> $GITHUB_ENV
      
      - name: Zip Release
        uses: TheDoctor0/zip-release@0.4.2
        with:
                filename: '${{ env.ZIPNAME }}'
                exclusions: '*.git* config.json data/*'
     
      - name: Upload Release
        uses: cb80/pubrel@latest
        with:
          ref: 'refs/tags/${{ needs.checktag.outputs.version }}'
          replace: '${{ needs.checktag.outputs.version }}'
          files: '${{ env.ZIPNAME }}'
#        uses: ncipollo/release-action@v1
#        with:
#          tag: '${{ needs.checktag.outputs.version }}'
#          artifacts: '${{ env.ZIPNAME }}'
#          token: ${{ secrets.GITHUB_TOKEN }}
