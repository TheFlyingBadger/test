# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'VERSION'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  getThisVersion:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.content }}
      #tagexists: ${{ steps.checkTag.outputs.exists }}
      zipname: ${{ github.event.repository.name }}.${{ github.event.repository.updated_at }}.v${{ steps.version.outputs.content }}.zip
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master
          
      - name: Read VERSION
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: VERSION
          trim: True
                     
  createrelease:
  
    runs-on: ubuntu-latest
    needs: getThisVersion
    if: ${{ !(needs.getThisVersion.outputs.version == null)  }}
    
    steps:

      - name: Display Inputs
        run: echo "${{ toJSON (needs.getThisVersion.outputs) }}"
 
      - name: Pull the repo
        uses: actions/checkout@master
      - name: Zip Folder
        #run: zip -r ${{ needs.getThisVersion.outputs.zipname }} . -x *.git* ./folder/
        run: zip -r ${{ needs.getThisVersion.outputs.zipname }} . -x *.git* folder/**\* ./folder/
      - name: Release to Github
        run: echo "Release"

  #    - name: Zip Release
   ##     uses: TheDoctor0/zip-release@0.4.2
    #    with:
    #            filename: 
    #            exclusions: folder/**\* *.git*
 
      - name: Upload Release
        uses: cb80/pubrel@latest
        with:
          ref: 'refs/tags/${{ needs.getThisVersion.outputs.version }}'
          replace: '${{ needs.getThisVersion.outputs.version }}'
          files: ${{ needs.getThisVersion.outputs.zipname }}
