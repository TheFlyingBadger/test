# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'VERSION'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  checktag:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
 #       run: |
  #        echo Add other actions to build,
   #       echo test, and deploy your project.
          
      - name: Read VERSION
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: VERSION
          trim: True
      - name: Echo VERSION file
        run: echo "VERSION='${{ steps.version.outputs.content }}'"

      
      - name: Check tag
        uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with: 
          tag: '${{ steps.version.outputs.content }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: echo ${{ steps.checkTag.outputs.exists }}
          
#      - name: Delete release (if it is there)
#        uses: liudonghua123/delete-release-action@v1
#        with:
#          release_name: '${{ steps.version.outputs.content }}'
#          suppress_errors: True
  createtag:
    runs-on: ubuntu-latest
    needs: checktag        
    if: contains(steps.checkTag.outputs.exists, 'false')  job
    steps:
      - name: Create Tag
        uses: negz/create-tag@v1
        with:
           version: '${{ steps.version.outputs.content }}'
           token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@master
      - name: Set env
        run: echo "ZIPNAME='${{ github.event.repository.name }}.$( date '+%F' ).v'${{ steps.version.outputs.content }}'.zip'" >> $GITHUB_ENV
      - name: Zip Release
        if: contains(steps.checkTag.outputs.exists, 'false')
        uses: TheDoctor0/zip-release@0.4.2
        with:
                filename: '${{ env.ZIPNAME }}'
                exclusions: '*.git* config.json data/*'
      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          tag: '${{ steps.version.outputs.content }}'
          artifacts: '${{ env.ZIPNAME }}'
          token: ${{ secrets.GITHUB_TOKEN }}
          
