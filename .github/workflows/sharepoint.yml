# This is a basic workflow to help you get started with Actions

name: Sharepoint

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  getThisVersion:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.content }}
      #tagexists: ${{ steps.checkTag.outputs.exists }}
      zipname: ${{ github.event.repository.name }}.${{ github.event.repository.updated_at }}.v${{ steps.version.outputs.content }}.zip
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master
      - name: ls
        run:  ls -al
          
      - name: Read VERSION
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: VERSION
          trim: True
          
      - name: Check tag
        uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with: 
          tag: '${{ steps.version.outputs.content }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Delete the tag
        if: ${{ steps.checkTag.outputs.exists == true }}
        uses: author/action-rollback@stable
        with:
          tag: ${{ steps.version.outputs.content }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                     
  createrelease:
  
    runs-on: ubuntu-latest
    needs: getThisVersion
    if: ${{ !(needs.getThisVersion.outputs.version == null)  }}
    
    steps:

      - name: Display Inputs
        run: echo "${{ toJSON (needs.getThisVersion.outputs) }}"
 
      - name: Pull the repo
        uses: actions/checkout@master
        
      - name: Zip Folder
        run: |
          echo "SP_ZIPNAME=$(echo "${{ needs.getThisVersion.outputs.zipname }}" | sed s/://g)" >> $GITHUB_ENV
          pwd
          mkdir workspace
          ls -al
          ln -s $PWD /github
          ln -s ${{ needs.getThisVersion.outputs.zipname }} workspace/.
          ls -al /github/workspace
        
      - name: SharePoint uploader
        uses: su-dont/share-point-uploader@v2.1
        with:
          #sp_url: https://emills.sharepoint.com/:f:/r/sites/docs
          sp_url: https://emills.sharepoint.com/
          sp_username: ${{ secrets.SP_USERNAME }}
          sp_password: ${{ secrets.SP_PASSWORD }}
          sp_folder: /Shared Documents
          sp_file_name: SP_ZIPNAME
          file: ${{ needs.getThisVersion.outputs.zipname }}
